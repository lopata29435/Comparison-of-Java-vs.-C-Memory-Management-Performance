# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = NONE, loadFactor = 384, lockType = OBJECT_LOCK, threadType = VIRTUAL)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1.426 ms/op
# Warmup Iteration   2: 1.376 ms/op
# Warmup Iteration   3: 1.370 ms/op
# Warmup Iteration   4: 1.361 ms/op
# Warmup Iteration   5: 1.364 ms/op
Iteration   1: 1.377 ms/op
Iteration   2: 1.374 ms/op
Iteration   3: 1.373 ms/op
Iteration   4: 1.376 ms/op
Iteration   5: 1.380 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  1.376 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (1.373, 1.376, 1.380), stdev = 0.003
  CI (99.9%): [1.364, 1.387] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  0.786 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  1.272 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  196249.216 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  5349838.092 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  3302973.781 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  40403.789 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  799.745 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  43474.145 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  1309.837 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  91477.710 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  30627.527 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  3710927.299 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  8.620 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  17970218.767 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  1750.833 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  5348795.854 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  52.001 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  3306997.641 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  287.330 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  970.543 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  22866152.296 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = NONE, loadFactor = 384, lockType = OBJECT_LOCK, threadType = PLATFORM)

# Run progress: 5.56% complete, ETA 00:29:17
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.659 ms/op
# Warmup Iteration   2: 0.618 ms/op
# Warmup Iteration   3: 0.607 ms/op
# Warmup Iteration   4: 0.600 ms/op
# Warmup Iteration   5: 0.623 ms/op
Iteration   1: 0.639 ms/op
Iteration   2: 0.606 ms/op
Iteration   3: 0.626 ms/op
Iteration   4: 0.622 ms/op
Iteration   5: 0.681 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  0.635 ±(99.9%) 0.110 ms/op [Average]
  (min, avg, max) = (0.606, 0.635, 0.681), stdev = 0.029
  CI (99.9%): [0.525, 0.745] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.678 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.596 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  42399.031 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  563809.616 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  298043.586 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  38318.058 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  8.115 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  12006.144 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  249.975 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  24406.420 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  3187.952 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  373101.145 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  56.866 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  3291424.505 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  398.194 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  564869.326 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  28.501 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  297712.127 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  364.920 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  2740.668 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  1961433.690 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = NONE, loadFactor = 384, lockType = REENTRANT_LOCK, threadType = VIRTUAL)

# Run progress: 11.11% complete, ETA 00:27:50
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1.434 ms/op
# Warmup Iteration   2: 1.405 ms/op
# Warmup Iteration   3: 1.401 ms/op
# Warmup Iteration   4: 1.404 ms/op
# Warmup Iteration   5: 1.409 ms/op
Iteration   1: 1.410 ms/op
Iteration   2: 1.410 ms/op
Iteration   3: 1.406 ms/op
Iteration   4: 1.407 ms/op
Iteration   5: 1.407 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  1.408 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (1.406, 1.408, 1.410), stdev = 0.002
  CI (99.9%): [1.401, 1.415] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  0.797 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  1.254 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  206329.513 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  5428225.745 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  3304190.270 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  40543.394 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  804.014 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  45348.255 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  1254.639 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  93873.988 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  31657.944 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  3737761.434 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  8.665 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  18440844.889 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  1760.305 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  5418993.510 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  55.879 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  3307772.882 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  324.496 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  950.490 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  23128259.554 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = NONE, loadFactor = 384, lockType = REENTRANT_LOCK, threadType = PLATFORM)

# Run progress: 16.67% complete, ETA 00:26:10
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.669 ms/op
# Warmup Iteration   2: 0.613 ms/op
# Warmup Iteration   3: 0.626 ms/op
# Warmup Iteration   4: 0.628 ms/op
# Warmup Iteration   5: 0.642 ms/op
Iteration   1: 0.682 ms/op
Iteration   2: 0.666 ms/op
Iteration   3: 0.662 ms/op
Iteration   4: 0.666 ms/op
Iteration   5: 0.643 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  0.664 ±(99.9%) 0.054 ms/op [Average]
  (min, avg, max) = (0.643, 0.664, 0.682), stdev = 0.014
  CI (99.9%): [0.610, 0.718] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.685 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.593 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  45007.877 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  584842.424 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  298967.614 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  42148.229 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  8.138 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  13186.190 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  258.551 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  25766.773 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  3328.792 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  388046.866 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  59.633 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  3462417.099 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  412.185 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  588049.069 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  28.497 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  299584.110 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  313.582 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  2714.207 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  2054711.727 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = NONE, loadFactor = 384, lockType = NO_LOCK, threadType = VIRTUAL)

# Run progress: 22.22% complete, ETA 00:24:28
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1.381 ms/op
# Warmup Iteration   2: 1.350 ms/op
# Warmup Iteration   3: 1.346 ms/op
# Warmup Iteration   4: 1.354 ms/op
# Warmup Iteration   5: 1.350 ms/op
Iteration   1: 1.353 ms/op
Iteration   2: 1.359 ms/op
Iteration   3: 1.363 ms/op
Iteration   4: 1.362 ms/op
Iteration   5: 1.361 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  1.359 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (1.353, 1.359, 1.363), stdev = 0.004
  CI (99.9%): [1.344, 1.375] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  0.779 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  1.284 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  180438.009 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  5324869.666 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  3325613.374 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  31354.413 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  762.020 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  42052.687 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  1320.887 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  82130.008 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  29958.780 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  3693926.389 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  8.596 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  17792312.604 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  1664.025 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  5331255.698 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  54.137 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  3324309.970 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  248.096 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  976.556 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  22844147.802 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = NONE, loadFactor = 384, lockType = NO_LOCK, threadType = PLATFORM)

# Run progress: 27.78% complete, ETA 00:22:44
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.641 ms/op
# Warmup Iteration   2: 0.561 ms/op
# Warmup Iteration   3: 0.585 ms/op
# Warmup Iteration   4: 0.569 ms/op
# Warmup Iteration   5: 0.559 ms/op
Iteration   1: 0.604 ms/op
Iteration   2: 0.622 ms/op
Iteration   3: 0.557 ms/op
Iteration   4: 0.575 ms/op
Iteration   5: 0.664 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  0.604 ±(99.9%) 0.160 ms/op [Average]
  (min, avg, max) = (0.557, 0.604, 0.664), stdev = 0.042
  CI (99.9%): [0.444, 0.764] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.768 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.566 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  42033.874 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  507882.436 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  256908.090 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  35441.152 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  7.947 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  12573.288 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  265.664 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  23710.137 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  3027.985 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  342940.528 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  54.597 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  3182397.387 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  368.602 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  510429.873 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  27.089 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  257658.607 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  247.431 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  2183.076 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  1800443.460 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = SLEEP, loadFactor = 384, lockType = OBJECT_LOCK, threadType = VIRTUAL)

# Run progress: 33.33% complete, ETA 00:21:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.298 ms/op
# Warmup Iteration   2: 4.198 ms/op
# Warmup Iteration   3: 4.229 ms/op
# Warmup Iteration   4: 4.224 ms/op
# Warmup Iteration   5: 4.204 ms/op
Iteration   1: 4.233 ms/op
Iteration   2: 4.196 ms/op
Iteration   3: 4.159 ms/op
Iteration   4: 4.330 ms/op
Iteration   5: 4.191 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  4.222 ±(99.9%) 0.253 ms/op [Average]
  (min, avg, max) = (4.159, 4.222, 4.330), stdev = 0.066
  CI (99.9%): [3.969, 4.475] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.088 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.919 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  462659.902 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  7777216.053 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  4743904.756 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  602364.220 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  872.184 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  87471.326 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  1975.435 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  177421.299 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  103469.269 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  5924371.654 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  355.108 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  34972065.330 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  4893.851 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  7840485.456 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  293.283 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  4761776.242 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  6251.526 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  19635.516 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  32148996.677 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = SLEEP, loadFactor = 384, lockType = OBJECT_LOCK, threadType = PLATFORM)

# Run progress: 38.89% complete, ETA 00:19:15
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 144.045 ms/op
# Warmup Iteration   2: 141.913 ms/op
# Warmup Iteration   3: 141.747 ms/op
# Warmup Iteration   4: 141.680 ms/op
# Warmup Iteration   5: 141.874 ms/op
Iteration   1: 142.009 ms/op
Iteration   2: 141.886 ms/op
Iteration   3: 142.076 ms/op
Iteration   4: 141.667 ms/op
Iteration   5: 141.887 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  141.905 ±(99.9%) 0.600 ms/op [Average]
  (min, avg, max) = (141.667, 141.905, 142.076), stdev = 0.156
  CI (99.9%): [141.305, 142.505] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.389 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.720 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  762852.174 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  9485526.692 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  6017149.733 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  2534315.154 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  7762.762 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  203589.289 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  2563.549 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  108532.045 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  191689.025 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  6134085.535 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  4614.327 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  44315718.840 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  40055.817 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  8696511.561 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  2885.674 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  5477470.664 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  23271.032 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  71074.441 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  31901274.186 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = SLEEP, loadFactor = 384, lockType = REENTRANT_LOCK, threadType = VIRTUAL)

# Run progress: 44.44% complete, ETA 00:17:31
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 41.160 ms/op
# Warmup Iteration   2: 37.672 ms/op
# Warmup Iteration   3: 37.492 ms/op
# Warmup Iteration   4: 37.695 ms/op
# Warmup Iteration   5: 41.618 ms/op
Iteration   1: 41.364 ms/op
Iteration   2: 41.005 ms/op
Iteration   3: 44.106 ms/op
Iteration   4: 44.228 ms/op
Iteration   5: 44.326 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  43.006 ±(99.9%) 6.427 ms/op [Average]
  (min, avg, max) = (41.005, 43.006, 44.326), stdev = 1.669
  CI (99.9%): [36.578, 49.433] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.785 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.560 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  2056682.921 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  24088015.802 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  14455200.465 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  4859384.140 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  3373.681 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  441607.615 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  8133.489 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  586432.346 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  473325.240 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  16537208.395 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  5222.598 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  160684150.292 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  24478.153 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  24216123.768 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  1857.267 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  14513272.772 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  34256.397 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  243633.986 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  90027507.408 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = SLEEP, loadFactor = 384, lockType = REENTRANT_LOCK, threadType = PLATFORM)

# Run progress: 50.00% complete, ETA 00:15:47
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 144.532 ms/op
# Warmup Iteration   2: 142.422 ms/op
# Warmup Iteration   3: 142.261 ms/op
# Warmup Iteration   4: 142.237 ms/op
# Warmup Iteration   5: 142.438 ms/op
Iteration   1: 142.362 ms/op
Iteration   2: 142.364 ms/op
Iteration   3: 142.412 ms/op
Iteration   4: 142.369 ms/op
Iteration   5: 142.407 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  142.383 ±(99.9%) 0.095 ms/op [Average]
  (min, avg, max) = (142.362, 142.383, 142.412), stdev = 0.025
  CI (99.9%): [142.288, 142.477] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.990 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.503 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  912597.192 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  18124190.294 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  8872555.520 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  2529443.664 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  2946.850 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  140830.872 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  4263.488 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  112067.015 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  267079.536 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  13160072.309 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  4594.699 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  119710964.449 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  25452.624 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  17055802.204 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  1292.904 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  8917609.120 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  15502.399 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  179382.210 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  60159668.212 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = SLEEP, loadFactor = 384, lockType = NO_LOCK, threadType = VIRTUAL)

# Run progress: 55.56% complete, ETA 00:14:02
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.778 ms/op
# Warmup Iteration   2: 4.676 ms/op
# Warmup Iteration   3: 4.627 ms/op
# Warmup Iteration   4: 4.580 ms/op
# Warmup Iteration   5: 4.642 ms/op
Iteration   1: 4.712 ms/op
Iteration   2: 4.764 ms/op
Iteration   3: 5.246 ms/op
Iteration   4: 5.448 ms/op
Iteration   5: 5.442 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  5.122 ±(99.9%) 1.389 ms/op [Average]
  (min, avg, max) = (4.712, 5.122, 5.448), stdev = 0.361
  CI (99.9%): [3.733, 6.511] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.022 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.978 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  588011.607 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  9227613.870 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  5292968.879 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  420348.698 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  1302.436 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  126501.855 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  3752.251 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  208104.477 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  157639.785 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  5984974.888 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  244.506 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  36719935.792 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  6967.258 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  9224376.343 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  670.009 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  5289259.018 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  5789.880 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  17305.013 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  35923866.147 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = SLEEP, loadFactor = 384, lockType = NO_LOCK, threadType = PLATFORM)

# Run progress: 61.11% complete, ETA 00:12:17
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 22.250 ms/op
# Warmup Iteration   2: 22.203 ms/op
# Warmup Iteration   3: 22.158 ms/op
# Warmup Iteration   4: 22.175 ms/op
# Warmup Iteration   5: 22.194 ms/op
Iteration   1: 22.192 ms/op
Iteration   2: 22.156 ms/op
Iteration   3: 22.195 ms/op
Iteration   4: 22.239 ms/op
Iteration   5: 22.213 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  22.199 ±(99.9%) 0.117 ms/op [Average]
  (min, avg, max) = (22.156, 22.199, 22.239), stdev = 0.030
  CI (99.9%): [22.082, 22.316] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.495 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.669 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  428159.000 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  5395527.503 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  3578494.167 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  1182561.566 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  424.219 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  74844.391 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  2024.959 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  53793.351 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  107418.953 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  4084297.561 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  2312.251 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  29087728.466 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  5557.907 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  5410848.116 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  272.166 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  3281166.911 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  7340.838 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  81904.566 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  19453746.876 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = PARK, loadFactor = 384, lockType = OBJECT_LOCK, threadType = VIRTUAL)

# Run progress: 66.67% complete, ETA 00:10:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.913 ms/op
# Warmup Iteration   2: 3.676 ms/op
# Warmup Iteration   3: 3.720 ms/op
# Warmup Iteration   4: 3.747 ms/op
# Warmup Iteration   5: 3.767 ms/op
Iteration   1: 3.678 ms/op
Iteration   2: 3.812 ms/op
Iteration   3: 3.826 ms/op
Iteration   4: 3.738 ms/op
Iteration   5: 3.807 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  3.772 ±(99.9%) 0.242 ms/op [Average]
  (min, avg, max) = (3.678, 3.772, 3.826), stdev = 0.063
  CI (99.9%): [3.531, 4.014] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.057 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.946 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  449792.578 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  7244480.244 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  4439431.107 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  521808.324 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  940.029 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  81266.407 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  1722.118 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  175561.332 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  86623.166 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  5401765.289 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  309.747 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  31854171.315 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  4580.885 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  7296989.176 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  276.337 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  4459034.890 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  3137.031 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  10224.888 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  30122809.054 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = PARK, loadFactor = 384, lockType = OBJECT_LOCK, threadType = PLATFORM)

# Run progress: 72.22% complete, ETA 00:08:46
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 143.525 ms/op
# Warmup Iteration   2: 141.986 ms/op
# Warmup Iteration   3: 141.841 ms/op
# Warmup Iteration   4: 141.704 ms/op
# Warmup Iteration   5: 141.760 ms/op
Iteration   1: 141.925 ms/op
Iteration   2: 141.834 ms/op
Iteration   3: 141.649 ms/op
Iteration   4: 141.715 ms/op
Iteration   5: 142.087 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  141.842 ±(99.9%) 0.668 ms/op [Average]
  (min, avg, max) = (141.649, 141.842, 142.087), stdev = 0.173
  CI (99.9%): [141.174, 142.509] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.455 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.687 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  640480.970 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  6994071.175 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  4607538.193 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  2323545.394 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  4576.228 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  213733.079 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  5816.424 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  112803.262 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  165016.601 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  7692129.353 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  4614.475 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  58254748.922 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  43661.220 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  8129995.406 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  4027.949 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  4187039.387 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  22237.409 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  77814.397 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  40049683.275 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = PARK, loadFactor = 384, lockType = REENTRANT_LOCK, threadType = VIRTUAL)

# Run progress: 77.78% complete, ETA 00:07:01
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 40.774 ms/op
# Warmup Iteration   2: 39.193 ms/op
# Warmup Iteration   3: 39.140 ms/op
# Warmup Iteration   4: 39.329 ms/op
# Warmup Iteration   5: 42.627 ms/op
Iteration   1: 42.821 ms/op
Iteration   2: 43.110 ms/op
Iteration   3: 42.369 ms/op
Iteration   4: 41.924 ms/op
Iteration   5: 41.728 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  42.390 ±(99.9%) 2.246 ms/op [Average]
  (min, avg, max) = (41.728, 42.390, 43.110), stdev = 0.583
  CI (99.9%): [40.144, 44.636] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.778 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.562 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  2108434.887 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  23361292.754 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  13967889.476 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  4706842.285 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  2639.517 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  457639.650 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  6616.333 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  595672.032 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  447183.746 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  16424976.383 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  5217.440 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  158322287.830 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  24009.584 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  23748294.091 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  1769.326 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  14196315.152 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  23619.608 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  264768.441 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  89031710.251 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = PARK, loadFactor = 384, lockType = REENTRANT_LOCK, threadType = PLATFORM)

# Run progress: 83.33% complete, ETA 00:05:16
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 143.948 ms/op
# Warmup Iteration   2: 142.076 ms/op
# Warmup Iteration   3: 142.006 ms/op
# Warmup Iteration   4: 141.985 ms/op
# Warmup Iteration   5: 142.060 ms/op
Iteration   1: 141.956 ms/op
Iteration   2: 142.037 ms/op
Iteration   3: 142.122 ms/op
Iteration   4: 142.105 ms/op
Iteration   5: 142.042 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  142.052 ±(99.9%) 0.253 ms/op [Average]
  (min, avg, max) = (141.956, 142.052, 142.122), stdev = 0.066
  CI (99.9%): [141.800, 142.305] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  2.099 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.476 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  1035894.902 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  19491538.061 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  8954564.746 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  2777082.744 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  1832.722 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  145172.462 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  3845.105 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  126648.018 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  241965.715 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  13410429.953 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  4597.790 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  134215963.863 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  34520.900 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  17809014.676 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  1155.783 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  8316223.989 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  28736.467 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  154556.321 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  63931514.836 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = PARK, loadFactor = 384, lockType = NO_LOCK, threadType = VIRTUAL)

# Run progress: 88.89% complete, ETA 00:03:30
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.832 ms/op
# Warmup Iteration   2: 4.570 ms/op
# Warmup Iteration   3: 4.553 ms/op
# Warmup Iteration   4: 4.567 ms/op
# Warmup Iteration   5: 4.836 ms/op
Iteration   1: 4.821 ms/op
Iteration   2: 4.924 ms/op
Iteration   3: 5.101 ms/op
Iteration   4: 5.212 ms/op
Iteration   5: 5.252 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  5.062 ±(99.9%) 0.714 ms/op [Average]
  (min, avg, max) = (4.821, 5.062, 5.252), stdev = 0.186
  CI (99.9%): [4.348, 5.776] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.018 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.983 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  598629.320 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  9073205.534 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  5176456.679 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  431933.099 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  1340.012 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  125139.801 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  3651.557 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  209204.201 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  150567.950 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  5867568.869 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  208.967 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  35865001.555 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  6279.071 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  9091261.641 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  684.491 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  5191525.502 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  6275.834 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  15571.982 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  35245612.696 #/op


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls
# Parameters: (backoffType = PARK, loadFactor = 384, lockType = NO_LOCK, threadType = PLATFORM)

# Run progress: 94.44% complete, ETA 00:01:45
# Fork: 1 of 1
# Preparing profilers: LinuxPerfNormProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 22.102 ms/op
# Warmup Iteration   2: 22.089 ms/op
# Warmup Iteration   3: 22.080 ms/op
# Warmup Iteration   4: 22.097 ms/op
# Warmup Iteration   5: 22.049 ms/op
Iteration   1: 22.097 ms/op
Iteration   2: 22.081 ms/op
Iteration   3: 22.059 ms/op
Iteration   4: 22.056 ms/op
Iteration   5: 22.104 ms/op
# Processing profiler results: LinuxPerfNormProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls":
  22.079 ±(99.9%) 0.083 ms/op [Average]
  (min, avg, max) = (22.056, 22.079, 22.104), stdev = 0.022
  CI (99.9%): [21.996, 22.163] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:CPI":
  1.305 clks/insn

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:IPC":
  0.767 insns/clk

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses":
  433751.100 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads":
  5052317.049 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores":
  3083197.200 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses":
  1235885.657 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses":
  674.073 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads":
  62383.335 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses":
  1218.784 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores":
  56698.990 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses":
  90173.994 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:branches":
  4060838.177 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:context-switches":
  2311.858 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:cycles":
  25152425.987 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses":
  5011.094 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads":
  4939714.396 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses":
  302.021 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores":
  3172268.956 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses":
  5404.994 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads":
  73228.961 #/op

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.thread.VPThreadSynchronizationBenchmark.synchronized_calls:instructions":
  19280357.685 #/op


# Run complete. Total time: 00:31:38

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                                  (backoffType)  (loadFactor)      (lockType)  (threadType)  Mode  Cnt          Score   Error      Units
VPThreadSynchronizationBenchmark.synchronized_calls                                 NONE           384     OBJECT_LOCK       VIRTUAL  avgt    5          1.376 ± 0.011      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             NONE           384     OBJECT_LOCK       VIRTUAL  avgt               0.786          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             NONE           384     OBJECT_LOCK       VIRTUAL  avgt               1.272          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           NONE           384     OBJECT_LOCK       VIRTUAL  avgt          196249.216               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 NONE           384     OBJECT_LOCK       VIRTUAL  avgt         5349838.092               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                NONE           384     OBJECT_LOCK       VIRTUAL  avgt         3302973.781               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           NONE           384     OBJECT_LOCK       VIRTUAL  avgt           40403.789               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 NONE           384     OBJECT_LOCK       VIRTUAL  avgt             799.745               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       NONE           384     OBJECT_LOCK       VIRTUAL  avgt           43474.145               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                NONE           384     OBJECT_LOCK       VIRTUAL  avgt            1309.837               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      NONE           384     OBJECT_LOCK       VIRTUAL  avgt           91477.710               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   NONE           384     OBJECT_LOCK       VIRTUAL  avgt           30627.527               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        NONE           384     OBJECT_LOCK       VIRTUAL  avgt         3710927.299               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                NONE           384     OBJECT_LOCK       VIRTUAL  avgt               8.620               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          NONE           384     OBJECT_LOCK       VIRTUAL  avgt        17970218.767               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                NONE           384     OBJECT_LOCK       VIRTUAL  avgt            1750.833               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      NONE           384     OBJECT_LOCK       VIRTUAL  avgt         5348795.854               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               NONE           384     OBJECT_LOCK       VIRTUAL  avgt              52.001               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     NONE           384     OBJECT_LOCK       VIRTUAL  avgt         3306997.641               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                NONE           384     OBJECT_LOCK       VIRTUAL  avgt             287.330               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      NONE           384     OBJECT_LOCK       VIRTUAL  avgt             970.543               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    NONE           384     OBJECT_LOCK       VIRTUAL  avgt        22866152.296               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 NONE           384     OBJECT_LOCK      PLATFORM  avgt    5          0.635 ± 0.110      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             NONE           384     OBJECT_LOCK      PLATFORM  avgt               1.678          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             NONE           384     OBJECT_LOCK      PLATFORM  avgt               0.596          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           NONE           384     OBJECT_LOCK      PLATFORM  avgt           42399.031               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 NONE           384     OBJECT_LOCK      PLATFORM  avgt          563809.616               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                NONE           384     OBJECT_LOCK      PLATFORM  avgt          298043.586               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           NONE           384     OBJECT_LOCK      PLATFORM  avgt           38318.058               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 NONE           384     OBJECT_LOCK      PLATFORM  avgt               8.115               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       NONE           384     OBJECT_LOCK      PLATFORM  avgt           12006.144               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                NONE           384     OBJECT_LOCK      PLATFORM  avgt             249.975               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      NONE           384     OBJECT_LOCK      PLATFORM  avgt           24406.420               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   NONE           384     OBJECT_LOCK      PLATFORM  avgt            3187.952               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        NONE           384     OBJECT_LOCK      PLATFORM  avgt          373101.145               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                NONE           384     OBJECT_LOCK      PLATFORM  avgt              56.866               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          NONE           384     OBJECT_LOCK      PLATFORM  avgt         3291424.505               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                NONE           384     OBJECT_LOCK      PLATFORM  avgt             398.194               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      NONE           384     OBJECT_LOCK      PLATFORM  avgt          564869.326               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               NONE           384     OBJECT_LOCK      PLATFORM  avgt              28.501               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     NONE           384     OBJECT_LOCK      PLATFORM  avgt          297712.127               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                NONE           384     OBJECT_LOCK      PLATFORM  avgt             364.920               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      NONE           384     OBJECT_LOCK      PLATFORM  avgt            2740.668               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    NONE           384     OBJECT_LOCK      PLATFORM  avgt         1961433.690               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 NONE           384  REENTRANT_LOCK       VIRTUAL  avgt    5          1.408 ± 0.007      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             NONE           384  REENTRANT_LOCK       VIRTUAL  avgt               0.797          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             NONE           384  REENTRANT_LOCK       VIRTUAL  avgt               1.254          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           NONE           384  REENTRANT_LOCK       VIRTUAL  avgt          206329.513               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 NONE           384  REENTRANT_LOCK       VIRTUAL  avgt         5428225.745               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                NONE           384  REENTRANT_LOCK       VIRTUAL  avgt         3304190.270               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           NONE           384  REENTRANT_LOCK       VIRTUAL  avgt           40543.394               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 NONE           384  REENTRANT_LOCK       VIRTUAL  avgt             804.014               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       NONE           384  REENTRANT_LOCK       VIRTUAL  avgt           45348.255               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                NONE           384  REENTRANT_LOCK       VIRTUAL  avgt            1254.639               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      NONE           384  REENTRANT_LOCK       VIRTUAL  avgt           93873.988               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   NONE           384  REENTRANT_LOCK       VIRTUAL  avgt           31657.944               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        NONE           384  REENTRANT_LOCK       VIRTUAL  avgt         3737761.434               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                NONE           384  REENTRANT_LOCK       VIRTUAL  avgt               8.665               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          NONE           384  REENTRANT_LOCK       VIRTUAL  avgt        18440844.889               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                NONE           384  REENTRANT_LOCK       VIRTUAL  avgt            1760.305               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      NONE           384  REENTRANT_LOCK       VIRTUAL  avgt         5418993.510               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               NONE           384  REENTRANT_LOCK       VIRTUAL  avgt              55.879               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     NONE           384  REENTRANT_LOCK       VIRTUAL  avgt         3307772.882               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                NONE           384  REENTRANT_LOCK       VIRTUAL  avgt             324.496               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      NONE           384  REENTRANT_LOCK       VIRTUAL  avgt             950.490               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    NONE           384  REENTRANT_LOCK       VIRTUAL  avgt        23128259.554               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 NONE           384  REENTRANT_LOCK      PLATFORM  avgt    5          0.664 ± 0.054      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             NONE           384  REENTRANT_LOCK      PLATFORM  avgt               1.685          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             NONE           384  REENTRANT_LOCK      PLATFORM  avgt               0.593          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           NONE           384  REENTRANT_LOCK      PLATFORM  avgt           45007.877               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 NONE           384  REENTRANT_LOCK      PLATFORM  avgt          584842.424               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                NONE           384  REENTRANT_LOCK      PLATFORM  avgt          298967.614               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           NONE           384  REENTRANT_LOCK      PLATFORM  avgt           42148.229               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 NONE           384  REENTRANT_LOCK      PLATFORM  avgt               8.138               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       NONE           384  REENTRANT_LOCK      PLATFORM  avgt           13186.190               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                NONE           384  REENTRANT_LOCK      PLATFORM  avgt             258.551               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      NONE           384  REENTRANT_LOCK      PLATFORM  avgt           25766.773               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   NONE           384  REENTRANT_LOCK      PLATFORM  avgt            3328.792               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        NONE           384  REENTRANT_LOCK      PLATFORM  avgt          388046.866               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                NONE           384  REENTRANT_LOCK      PLATFORM  avgt              59.633               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          NONE           384  REENTRANT_LOCK      PLATFORM  avgt         3462417.099               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                NONE           384  REENTRANT_LOCK      PLATFORM  avgt             412.185               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      NONE           384  REENTRANT_LOCK      PLATFORM  avgt          588049.069               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               NONE           384  REENTRANT_LOCK      PLATFORM  avgt              28.497               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     NONE           384  REENTRANT_LOCK      PLATFORM  avgt          299584.110               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                NONE           384  REENTRANT_LOCK      PLATFORM  avgt             313.582               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      NONE           384  REENTRANT_LOCK      PLATFORM  avgt            2714.207               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    NONE           384  REENTRANT_LOCK      PLATFORM  avgt         2054711.727               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 NONE           384         NO_LOCK       VIRTUAL  avgt    5          1.359 ± 0.015      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             NONE           384         NO_LOCK       VIRTUAL  avgt               0.779          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             NONE           384         NO_LOCK       VIRTUAL  avgt               1.284          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           NONE           384         NO_LOCK       VIRTUAL  avgt          180438.009               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 NONE           384         NO_LOCK       VIRTUAL  avgt         5324869.666               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                NONE           384         NO_LOCK       VIRTUAL  avgt         3325613.374               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           NONE           384         NO_LOCK       VIRTUAL  avgt           31354.413               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 NONE           384         NO_LOCK       VIRTUAL  avgt             762.020               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       NONE           384         NO_LOCK       VIRTUAL  avgt           42052.687               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                NONE           384         NO_LOCK       VIRTUAL  avgt            1320.887               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      NONE           384         NO_LOCK       VIRTUAL  avgt           82130.008               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   NONE           384         NO_LOCK       VIRTUAL  avgt           29958.780               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        NONE           384         NO_LOCK       VIRTUAL  avgt         3693926.389               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                NONE           384         NO_LOCK       VIRTUAL  avgt               8.596               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          NONE           384         NO_LOCK       VIRTUAL  avgt        17792312.604               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                NONE           384         NO_LOCK       VIRTUAL  avgt            1664.025               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      NONE           384         NO_LOCK       VIRTUAL  avgt         5331255.698               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               NONE           384         NO_LOCK       VIRTUAL  avgt              54.137               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     NONE           384         NO_LOCK       VIRTUAL  avgt         3324309.970               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                NONE           384         NO_LOCK       VIRTUAL  avgt             248.096               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      NONE           384         NO_LOCK       VIRTUAL  avgt             976.556               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    NONE           384         NO_LOCK       VIRTUAL  avgt        22844147.802               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 NONE           384         NO_LOCK      PLATFORM  avgt    5          0.604 ± 0.160      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             NONE           384         NO_LOCK      PLATFORM  avgt               1.768          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             NONE           384         NO_LOCK      PLATFORM  avgt               0.566          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           NONE           384         NO_LOCK      PLATFORM  avgt           42033.874               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 NONE           384         NO_LOCK      PLATFORM  avgt          507882.436               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                NONE           384         NO_LOCK      PLATFORM  avgt          256908.090               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           NONE           384         NO_LOCK      PLATFORM  avgt           35441.152               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 NONE           384         NO_LOCK      PLATFORM  avgt               7.947               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       NONE           384         NO_LOCK      PLATFORM  avgt           12573.288               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                NONE           384         NO_LOCK      PLATFORM  avgt             265.664               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      NONE           384         NO_LOCK      PLATFORM  avgt           23710.137               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   NONE           384         NO_LOCK      PLATFORM  avgt            3027.985               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        NONE           384         NO_LOCK      PLATFORM  avgt          342940.528               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                NONE           384         NO_LOCK      PLATFORM  avgt              54.597               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          NONE           384         NO_LOCK      PLATFORM  avgt         3182397.387               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                NONE           384         NO_LOCK      PLATFORM  avgt             368.602               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      NONE           384         NO_LOCK      PLATFORM  avgt          510429.873               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               NONE           384         NO_LOCK      PLATFORM  avgt              27.089               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     NONE           384         NO_LOCK      PLATFORM  avgt          257658.607               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                NONE           384         NO_LOCK      PLATFORM  avgt             247.431               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      NONE           384         NO_LOCK      PLATFORM  avgt            2183.076               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    NONE           384         NO_LOCK      PLATFORM  avgt         1800443.460               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt    5          4.222 ± 0.253      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                            SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt               1.088          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                            SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt               0.919          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses          SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt          462659.902               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt         7777216.053               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores               SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt         4743904.756               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses          SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt          602364.220               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt             872.184               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                      SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt           87471.326               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses               SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt            1975.435               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                     SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt          177421.299               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                  SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt          103469.269               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                       SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt         5924371.654               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches               SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt             355.108               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                         SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt        34972065.330               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses               SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt            4893.851               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                     SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt         7840485.456               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses              SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt             293.283               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                    SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt         4761776.242               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses               SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt            6251.526               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                     SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt           19635.516               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                   SLEEP           384     OBJECT_LOCK       VIRTUAL  avgt        32148996.677               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                SLEEP           384     OBJECT_LOCK      PLATFORM  avgt    5        141.905 ± 0.600      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                            SLEEP           384     OBJECT_LOCK      PLATFORM  avgt               1.389          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                            SLEEP           384     OBJECT_LOCK      PLATFORM  avgt               0.720          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses          SLEEP           384     OBJECT_LOCK      PLATFORM  avgt          762852.174               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                SLEEP           384     OBJECT_LOCK      PLATFORM  avgt         9485526.692               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores               SLEEP           384     OBJECT_LOCK      PLATFORM  avgt         6017149.733               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses          SLEEP           384     OBJECT_LOCK      PLATFORM  avgt         2534315.154               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                SLEEP           384     OBJECT_LOCK      PLATFORM  avgt            7762.762               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                      SLEEP           384     OBJECT_LOCK      PLATFORM  avgt          203589.289               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses               SLEEP           384     OBJECT_LOCK      PLATFORM  avgt            2563.549               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                     SLEEP           384     OBJECT_LOCK      PLATFORM  avgt          108532.045               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                  SLEEP           384     OBJECT_LOCK      PLATFORM  avgt          191689.025               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                       SLEEP           384     OBJECT_LOCK      PLATFORM  avgt         6134085.535               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches               SLEEP           384     OBJECT_LOCK      PLATFORM  avgt            4614.327               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                         SLEEP           384     OBJECT_LOCK      PLATFORM  avgt        44315718.840               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses               SLEEP           384     OBJECT_LOCK      PLATFORM  avgt           40055.817               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                     SLEEP           384     OBJECT_LOCK      PLATFORM  avgt         8696511.561               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses              SLEEP           384     OBJECT_LOCK      PLATFORM  avgt            2885.674               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                    SLEEP           384     OBJECT_LOCK      PLATFORM  avgt         5477470.664               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses               SLEEP           384     OBJECT_LOCK      PLATFORM  avgt           23271.032               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                     SLEEP           384     OBJECT_LOCK      PLATFORM  avgt           71074.441               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                   SLEEP           384     OBJECT_LOCK      PLATFORM  avgt        31901274.186               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt    5         43.006 ± 6.427      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                            SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt               1.785          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                            SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt               0.560          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses          SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt         2056682.921               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt        24088015.802               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores               SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt        14455200.465               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses          SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt         4859384.140               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt            3373.681               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                      SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt          441607.615               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses               SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt            8133.489               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                     SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt          586432.346               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                  SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt          473325.240               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                       SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt        16537208.395               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches               SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt            5222.598               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                         SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt       160684150.292               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses               SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt           24478.153               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                     SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt        24216123.768               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses              SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt            1857.267               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                    SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt        14513272.772               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses               SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt           34256.397               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                     SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt          243633.986               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                   SLEEP           384  REENTRANT_LOCK       VIRTUAL  avgt        90027507.408               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt    5        142.383 ± 0.095      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                            SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt               1.990          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                            SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt               0.503          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses          SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt          912597.192               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt        18124190.294               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores               SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt         8872555.520               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses          SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt         2529443.664               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt            2946.850               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                      SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt          140830.872               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses               SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt            4263.488               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                     SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt          112067.015               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                  SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt          267079.536               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                       SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt        13160072.309               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches               SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt            4594.699               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                         SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt       119710964.449               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses               SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt           25452.624               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                     SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt        17055802.204               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses              SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt            1292.904               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                    SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt         8917609.120               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses               SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt           15502.399               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                     SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt          179382.210               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                   SLEEP           384  REENTRANT_LOCK      PLATFORM  avgt        60159668.212               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                SLEEP           384         NO_LOCK       VIRTUAL  avgt    5          5.122 ± 1.389      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                            SLEEP           384         NO_LOCK       VIRTUAL  avgt               1.022          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                            SLEEP           384         NO_LOCK       VIRTUAL  avgt               0.978          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses          SLEEP           384         NO_LOCK       VIRTUAL  avgt          588011.607               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                SLEEP           384         NO_LOCK       VIRTUAL  avgt         9227613.870               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores               SLEEP           384         NO_LOCK       VIRTUAL  avgt         5292968.879               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses          SLEEP           384         NO_LOCK       VIRTUAL  avgt          420348.698               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                SLEEP           384         NO_LOCK       VIRTUAL  avgt            1302.436               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                      SLEEP           384         NO_LOCK       VIRTUAL  avgt          126501.855               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses               SLEEP           384         NO_LOCK       VIRTUAL  avgt            3752.251               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                     SLEEP           384         NO_LOCK       VIRTUAL  avgt          208104.477               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                  SLEEP           384         NO_LOCK       VIRTUAL  avgt          157639.785               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                       SLEEP           384         NO_LOCK       VIRTUAL  avgt         5984974.888               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches               SLEEP           384         NO_LOCK       VIRTUAL  avgt             244.506               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                         SLEEP           384         NO_LOCK       VIRTUAL  avgt        36719935.792               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses               SLEEP           384         NO_LOCK       VIRTUAL  avgt            6967.258               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                     SLEEP           384         NO_LOCK       VIRTUAL  avgt         9224376.343               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses              SLEEP           384         NO_LOCK       VIRTUAL  avgt             670.009               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                    SLEEP           384         NO_LOCK       VIRTUAL  avgt         5289259.018               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses               SLEEP           384         NO_LOCK       VIRTUAL  avgt            5789.880               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                     SLEEP           384         NO_LOCK       VIRTUAL  avgt           17305.013               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                   SLEEP           384         NO_LOCK       VIRTUAL  avgt        35923866.147               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                SLEEP           384         NO_LOCK      PLATFORM  avgt    5         22.199 ± 0.117      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                            SLEEP           384         NO_LOCK      PLATFORM  avgt               1.495          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                            SLEEP           384         NO_LOCK      PLATFORM  avgt               0.669          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses          SLEEP           384         NO_LOCK      PLATFORM  avgt          428159.000               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                SLEEP           384         NO_LOCK      PLATFORM  avgt         5395527.503               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores               SLEEP           384         NO_LOCK      PLATFORM  avgt         3578494.167               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses          SLEEP           384         NO_LOCK      PLATFORM  avgt         1182561.566               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                SLEEP           384         NO_LOCK      PLATFORM  avgt             424.219               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                      SLEEP           384         NO_LOCK      PLATFORM  avgt           74844.391               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses               SLEEP           384         NO_LOCK      PLATFORM  avgt            2024.959               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                     SLEEP           384         NO_LOCK      PLATFORM  avgt           53793.351               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                  SLEEP           384         NO_LOCK      PLATFORM  avgt          107418.953               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                       SLEEP           384         NO_LOCK      PLATFORM  avgt         4084297.561               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches               SLEEP           384         NO_LOCK      PLATFORM  avgt            2312.251               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                         SLEEP           384         NO_LOCK      PLATFORM  avgt        29087728.466               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses               SLEEP           384         NO_LOCK      PLATFORM  avgt            5557.907               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                     SLEEP           384         NO_LOCK      PLATFORM  avgt         5410848.116               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses              SLEEP           384         NO_LOCK      PLATFORM  avgt             272.166               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                    SLEEP           384         NO_LOCK      PLATFORM  avgt         3281166.911               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses               SLEEP           384         NO_LOCK      PLATFORM  avgt            7340.838               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                     SLEEP           384         NO_LOCK      PLATFORM  avgt           81904.566               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                   SLEEP           384         NO_LOCK      PLATFORM  avgt        19453746.876               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 PARK           384     OBJECT_LOCK       VIRTUAL  avgt    5          3.772 ± 0.242      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             PARK           384     OBJECT_LOCK       VIRTUAL  avgt               1.057          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             PARK           384     OBJECT_LOCK       VIRTUAL  avgt               0.946          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           PARK           384     OBJECT_LOCK       VIRTUAL  avgt          449792.578               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 PARK           384     OBJECT_LOCK       VIRTUAL  avgt         7244480.244               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                PARK           384     OBJECT_LOCK       VIRTUAL  avgt         4439431.107               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           PARK           384     OBJECT_LOCK       VIRTUAL  avgt          521808.324               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 PARK           384     OBJECT_LOCK       VIRTUAL  avgt             940.029               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       PARK           384     OBJECT_LOCK       VIRTUAL  avgt           81266.407               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                PARK           384     OBJECT_LOCK       VIRTUAL  avgt            1722.118               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      PARK           384     OBJECT_LOCK       VIRTUAL  avgt          175561.332               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   PARK           384     OBJECT_LOCK       VIRTUAL  avgt           86623.166               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        PARK           384     OBJECT_LOCK       VIRTUAL  avgt         5401765.289               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                PARK           384     OBJECT_LOCK       VIRTUAL  avgt             309.747               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          PARK           384     OBJECT_LOCK       VIRTUAL  avgt        31854171.315               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                PARK           384     OBJECT_LOCK       VIRTUAL  avgt            4580.885               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      PARK           384     OBJECT_LOCK       VIRTUAL  avgt         7296989.176               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               PARK           384     OBJECT_LOCK       VIRTUAL  avgt             276.337               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     PARK           384     OBJECT_LOCK       VIRTUAL  avgt         4459034.890               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                PARK           384     OBJECT_LOCK       VIRTUAL  avgt            3137.031               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      PARK           384     OBJECT_LOCK       VIRTUAL  avgt           10224.888               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    PARK           384     OBJECT_LOCK       VIRTUAL  avgt        30122809.054               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 PARK           384     OBJECT_LOCK      PLATFORM  avgt    5        141.842 ± 0.668      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             PARK           384     OBJECT_LOCK      PLATFORM  avgt               1.455          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             PARK           384     OBJECT_LOCK      PLATFORM  avgt               0.687          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           PARK           384     OBJECT_LOCK      PLATFORM  avgt          640480.970               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 PARK           384     OBJECT_LOCK      PLATFORM  avgt         6994071.175               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                PARK           384     OBJECT_LOCK      PLATFORM  avgt         4607538.193               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           PARK           384     OBJECT_LOCK      PLATFORM  avgt         2323545.394               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 PARK           384     OBJECT_LOCK      PLATFORM  avgt            4576.228               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       PARK           384     OBJECT_LOCK      PLATFORM  avgt          213733.079               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                PARK           384     OBJECT_LOCK      PLATFORM  avgt            5816.424               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      PARK           384     OBJECT_LOCK      PLATFORM  avgt          112803.262               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   PARK           384     OBJECT_LOCK      PLATFORM  avgt          165016.601               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        PARK           384     OBJECT_LOCK      PLATFORM  avgt         7692129.353               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                PARK           384     OBJECT_LOCK      PLATFORM  avgt            4614.475               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          PARK           384     OBJECT_LOCK      PLATFORM  avgt        58254748.922               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                PARK           384     OBJECT_LOCK      PLATFORM  avgt           43661.220               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      PARK           384     OBJECT_LOCK      PLATFORM  avgt         8129995.406               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               PARK           384     OBJECT_LOCK      PLATFORM  avgt            4027.949               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     PARK           384     OBJECT_LOCK      PLATFORM  avgt         4187039.387               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                PARK           384     OBJECT_LOCK      PLATFORM  avgt           22237.409               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      PARK           384     OBJECT_LOCK      PLATFORM  avgt           77814.397               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    PARK           384     OBJECT_LOCK      PLATFORM  avgt        40049683.275               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 PARK           384  REENTRANT_LOCK       VIRTUAL  avgt    5         42.390 ± 2.246      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             PARK           384  REENTRANT_LOCK       VIRTUAL  avgt               1.778          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             PARK           384  REENTRANT_LOCK       VIRTUAL  avgt               0.562          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           PARK           384  REENTRANT_LOCK       VIRTUAL  avgt         2108434.887               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 PARK           384  REENTRANT_LOCK       VIRTUAL  avgt        23361292.754               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                PARK           384  REENTRANT_LOCK       VIRTUAL  avgt        13967889.476               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           PARK           384  REENTRANT_LOCK       VIRTUAL  avgt         4706842.285               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 PARK           384  REENTRANT_LOCK       VIRTUAL  avgt            2639.517               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       PARK           384  REENTRANT_LOCK       VIRTUAL  avgt          457639.650               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                PARK           384  REENTRANT_LOCK       VIRTUAL  avgt            6616.333               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      PARK           384  REENTRANT_LOCK       VIRTUAL  avgt          595672.032               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   PARK           384  REENTRANT_LOCK       VIRTUAL  avgt          447183.746               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        PARK           384  REENTRANT_LOCK       VIRTUAL  avgt        16424976.383               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                PARK           384  REENTRANT_LOCK       VIRTUAL  avgt            5217.440               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          PARK           384  REENTRANT_LOCK       VIRTUAL  avgt       158322287.830               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                PARK           384  REENTRANT_LOCK       VIRTUAL  avgt           24009.584               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      PARK           384  REENTRANT_LOCK       VIRTUAL  avgt        23748294.091               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               PARK           384  REENTRANT_LOCK       VIRTUAL  avgt            1769.326               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     PARK           384  REENTRANT_LOCK       VIRTUAL  avgt        14196315.152               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                PARK           384  REENTRANT_LOCK       VIRTUAL  avgt           23619.608               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      PARK           384  REENTRANT_LOCK       VIRTUAL  avgt          264768.441               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    PARK           384  REENTRANT_LOCK       VIRTUAL  avgt        89031710.251               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 PARK           384  REENTRANT_LOCK      PLATFORM  avgt    5        142.052 ± 0.253      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             PARK           384  REENTRANT_LOCK      PLATFORM  avgt               2.099          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             PARK           384  REENTRANT_LOCK      PLATFORM  avgt               0.476          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           PARK           384  REENTRANT_LOCK      PLATFORM  avgt         1035894.902               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 PARK           384  REENTRANT_LOCK      PLATFORM  avgt        19491538.061               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                PARK           384  REENTRANT_LOCK      PLATFORM  avgt         8954564.746               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           PARK           384  REENTRANT_LOCK      PLATFORM  avgt         2777082.744               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 PARK           384  REENTRANT_LOCK      PLATFORM  avgt            1832.722               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       PARK           384  REENTRANT_LOCK      PLATFORM  avgt          145172.462               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                PARK           384  REENTRANT_LOCK      PLATFORM  avgt            3845.105               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      PARK           384  REENTRANT_LOCK      PLATFORM  avgt          126648.018               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   PARK           384  REENTRANT_LOCK      PLATFORM  avgt          241965.715               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        PARK           384  REENTRANT_LOCK      PLATFORM  avgt        13410429.953               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                PARK           384  REENTRANT_LOCK      PLATFORM  avgt            4597.790               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          PARK           384  REENTRANT_LOCK      PLATFORM  avgt       134215963.863               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                PARK           384  REENTRANT_LOCK      PLATFORM  avgt           34520.900               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      PARK           384  REENTRANT_LOCK      PLATFORM  avgt        17809014.676               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               PARK           384  REENTRANT_LOCK      PLATFORM  avgt            1155.783               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     PARK           384  REENTRANT_LOCK      PLATFORM  avgt         8316223.989               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                PARK           384  REENTRANT_LOCK      PLATFORM  avgt           28736.467               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      PARK           384  REENTRANT_LOCK      PLATFORM  avgt          154556.321               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    PARK           384  REENTRANT_LOCK      PLATFORM  avgt        63931514.836               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 PARK           384         NO_LOCK       VIRTUAL  avgt    5          5.062 ± 0.714      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             PARK           384         NO_LOCK       VIRTUAL  avgt               1.018          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             PARK           384         NO_LOCK       VIRTUAL  avgt               0.983          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           PARK           384         NO_LOCK       VIRTUAL  avgt          598629.320               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 PARK           384         NO_LOCK       VIRTUAL  avgt         9073205.534               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                PARK           384         NO_LOCK       VIRTUAL  avgt         5176456.679               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           PARK           384         NO_LOCK       VIRTUAL  avgt          431933.099               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 PARK           384         NO_LOCK       VIRTUAL  avgt            1340.012               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       PARK           384         NO_LOCK       VIRTUAL  avgt          125139.801               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                PARK           384         NO_LOCK       VIRTUAL  avgt            3651.557               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      PARK           384         NO_LOCK       VIRTUAL  avgt          209204.201               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   PARK           384         NO_LOCK       VIRTUAL  avgt          150567.950               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        PARK           384         NO_LOCK       VIRTUAL  avgt         5867568.869               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                PARK           384         NO_LOCK       VIRTUAL  avgt             208.967               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          PARK           384         NO_LOCK       VIRTUAL  avgt        35865001.555               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                PARK           384         NO_LOCK       VIRTUAL  avgt            6279.071               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      PARK           384         NO_LOCK       VIRTUAL  avgt         9091261.641               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               PARK           384         NO_LOCK       VIRTUAL  avgt             684.491               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     PARK           384         NO_LOCK       VIRTUAL  avgt         5191525.502               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                PARK           384         NO_LOCK       VIRTUAL  avgt            6275.834               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      PARK           384         NO_LOCK       VIRTUAL  avgt           15571.982               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    PARK           384         NO_LOCK       VIRTUAL  avgt        35245612.696               #/op
VPThreadSynchronizationBenchmark.synchronized_calls                                 PARK           384         NO_LOCK      PLATFORM  avgt    5         22.079 ± 0.083      ms/op
VPThreadSynchronizationBenchmark.synchronized_calls:CPI                             PARK           384         NO_LOCK      PLATFORM  avgt               1.305          clks/insn
VPThreadSynchronizationBenchmark.synchronized_calls:IPC                             PARK           384         NO_LOCK      PLATFORM  avgt               0.767          insns/clk
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-load-misses           PARK           384         NO_LOCK      PLATFORM  avgt          433751.100               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-loads                 PARK           384         NO_LOCK      PLATFORM  avgt         5052317.049               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-dcache-stores                PARK           384         NO_LOCK      PLATFORM  avgt         3083197.200               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:L1-icache-load-misses           PARK           384         NO_LOCK      PLATFORM  avgt         1235885.657               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-load-misses                 PARK           384         NO_LOCK      PLATFORM  avgt             674.073               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-loads                       PARK           384         NO_LOCK      PLATFORM  avgt           62383.335               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-store-misses                PARK           384         NO_LOCK      PLATFORM  avgt            1218.784               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:LLC-stores                      PARK           384         NO_LOCK      PLATFORM  avgt           56698.990               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branch-misses                   PARK           384         NO_LOCK      PLATFORM  avgt           90173.994               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:branches                        PARK           384         NO_LOCK      PLATFORM  avgt         4060838.177               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:context-switches                PARK           384         NO_LOCK      PLATFORM  avgt            2311.858               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:cycles                          PARK           384         NO_LOCK      PLATFORM  avgt        25152425.987               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-load-misses                PARK           384         NO_LOCK      PLATFORM  avgt            5011.094               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-loads                      PARK           384         NO_LOCK      PLATFORM  avgt         4939714.396               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-store-misses               PARK           384         NO_LOCK      PLATFORM  avgt             302.021               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:dTLB-stores                     PARK           384         NO_LOCK      PLATFORM  avgt         3172268.956               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-load-misses                PARK           384         NO_LOCK      PLATFORM  avgt            5404.994               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:iTLB-loads                      PARK           384         NO_LOCK      PLATFORM  avgt           73228.961               #/op
VPThreadSynchronizationBenchmark.synchronized_calls:instructions                    PARK           384         NO_LOCK      PLATFORM  avgt        19280357.685               #/op
